<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Drafts on Алексей Жидков</title><link>https://azhidkov.pro/drafts/</link><description>Recent content in Drafts on Алексей Жидков</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Mon, 02 May 2022 08:25:37 +0700</lastBuildDate><atom:link href="https://azhidkov.pro/drafts/index.xml" rel="self" type="application/rss+xml"/><item><title>Диаграмма Эффектов v0.0.2: пример построения диаграммы эффектов</title><link>https://azhidkov.pro/drafts/effects-diagram/true-story-project/</link><pubDate>Mon, 02 May 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/effects-diagram/true-story-project/</guid><description>Note: Следить за обновлениями блога можно в моём канале: Эргономичный код
Это второй пост в серии, посвящённый диаграмме эффектов:
(todo: линка) Вступление - описывает необходимость в диаграмме, основные элементы диаграммы и их визуальное представлениеПример построения, проект True Story Project (TSP) - приводит пример построения диаграммы для реального проектаДекомпозиция системы на модули базе диаграммы эффектов - описывает методику декомпозиции системы на модули на базе диаграммы эффектов и иллюстрирует её на примере декомпозиции проекта TSPПеревод диаграммы в код - описывает процесс трансляции диаграммы в исходный код на примере проекта TSP Диаграмма эффектов системы актуализации данных в Яндекс.</description></item><item><title>Диаграмма Эффектов: Спецификация v0.0.2</title><link>https://azhidkov.pro/drafts/effects-diagram/intro/</link><pubDate>Sun, 01 May 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/effects-diagram/intro/</guid><description>Note: Следить за обновлениями блога можно в моём канале: Эргономичный код
Note: Этот пост является первой попыткой описать диаграмму формально, поэтому в описании возможны неточности и пробелы, а детали и нотация наверняка изменятся в будущем.
Это первый пост в серии, посвящённый диаграмме эффектов:
&amp;#34;Спецификация&amp;#34;: назначение диаграммы, основные концептуальные элементы и их визуальное представление&amp;#34;Пример построения диаграммы, проект True Story Project (TSP)&amp;#34; - процесс построения диаграммы эффектов реального проекта&amp;#34;Методика объектно-ориентированной декомпозиции&amp;#34; - рациональный подход к разбиению системы на модули с помощью диаграммы эффектов и демонстрирует его на примере декомпозиции проекта TSP&amp;#34;Методика перевода диаграммы в код&amp;#34; - процесс трансляции диаграммы в исходный код на примере проекта TSP ВведениеИдентичность информационной системы определяется тем, как она взаимодействует с внешним миром.</description></item><item><title>Диаграмма Эффектов v0.0.1</title><link>https://azhidkov.pro/drafts/aggregates/effects-diagram-v2/</link><pubDate>Fri, 01 Apr 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/aggregates/effects-diagram-v2/</guid><description>Note: Следить за обновлениями блога можно в моём канале: Эргономичный код
Note: Этот пост является первой попыткой описать диаграмму формально, поэтому в описании возможны неточности и пробелы, а детали и нотация наверняка изменятся в будущем.
ВведениеЭффекты, на ряду с моделью информации, являются душой информационной системы - что-то сохранить в БД, что-то запросить из внешнего сервиса, что-то запросить из нескольких источников, объединить это и записать куда-то, в общем как-то по взаимодействовать с окружающим миром.</description></item><item><title>Черновик: Диаграмма Эффектов v0.0.1</title><link>https://azhidkov.pro/drafts/aggregates/effects-diagram/</link><pubDate>Fri, 01 Apr 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/aggregates/effects-diagram/</guid><description>ВведениеСейчас самым распространённым способом декомпозиции ПО является декомпозиция по техническим аспектам - сервисы, сущности, исключения и т.п. И хотя многие известные и авторитетные авторы - такие как Константин, Парнас, Эванс и Мартин - критикуют такой способ декомпозиции, никто из них не даёт альтернативной практической методики.
Я потратил несколько лет на поиски готового способа декомпозиции, отличного от декомпозиции по техническим аспектам. Однако ничего не нашёл и потратил ещё два года на разработку собственного.</description></item><item><title>Черновик: Основные подходы к моделированию информации - объектная и реляционные модели информации</title><link>https://azhidkov.pro/drafts/aggregates/information-modeling/</link><pubDate>Fri, 01 Apr 2022 08:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/aggregates/information-modeling/</guid><description>Моделирование информацииВведение Сущности, связи, атрибуты, состояние, данные, объекты, объекты-значения, идентичность и все-все-всеУниверсальные понятияИдентичность хреновиныНа базе ИДа (места) На базе атрибутов Состояние Сущность Значение Изменяемость/неизменяемость Абстрактная модельСущность Атрибут ??? значение/тип/домен Связь Модель информации на базе записей ER-модель Реляционная модель ХХХ-модель на базе структур (данных)Поля (атрибуты) УУУ-модель на базе указателей/объектовОбъект-значение (это симуляция данных в языках, в которых есть только объекты) Свойства (поля/атрибуты)Сущности концептуально изменяемы. Но представлять их лучше как последовательность неизменяемых данных</description></item><item><title>Основные структуры дизайна програм</title><link>https://azhidkov.pro/drafts/210901-basic-structures/210912-basic-patterns/</link><pubDate>Wed, 01 Sep 2021 11:25:37 +0700</pubDate><guid>https://azhidkov.pro/drafts/210901-basic-structures/210912-basic-patterns/</guid><description>Note: Следить за обновлениями блога можно в моём канале: Эргономичный код
Введение(todo: слишком много хорошо - плохо:)) (todo: как мне в ситуации, когда надо и научить и сделать хороший проект силами интернов)
Я сейчас среди прочего отвечаю за интернатуру по Java в Сиберина.Про. Интернатура устроена таким образом, что интерны, при первой возможности, подключаются к разработке проектов, предназначенных для проверки бизнес гипотез компании. И так вышло, что сейчас мне надо разработать такой проект силами интернов.</description></item><item><title/><link>https://azhidkov.pro/drafts/210901-basic-structures/210923-lesson/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://azhidkov.pro/drafts/210901-basic-structures/210923-lesson/</guid><description>Структурным дизайном Слоёной архитектурой Инверсией зависимостей Чистой архитектурой БКЭ ФЯ/ИО
Ммм, прикольная мысль, надо обдумать:)
Базовые структуры программирования.
Смотри, в программировании есть пачка идей, которые, по сути, являются одними и теми же яйцами с разных ракурсов.
Началось всё ос структурного дизайна годах в 60-70 и обработки данных ориентированных на трансформации. Там чуваки выделили 4 основных блока реализации любой функции - контроллер, ввод, трансформация и вывод. В ОО-шной реинкорнации, это превратилось в Boundary-Controller-Entity Якобсона.</description></item></channel></rss>