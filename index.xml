<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Разработка эргономичного кода</title><link>http://example.org/</link><description>Recent content on Разработка эргономичного кода</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 23 Feb 2021 13:25:37 +0700</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Неэргономичный Jackson</title><link>http://example.org/posts/210212-jackson-write-object-as-string/</link><pubDate>Tue, 23 Feb 2021 13:25:37 +0700</pubDate><guid>http://example.org/posts/210212-jackson-write-object-as-string/</guid><description>В последнее вермя несколько раз писал примерно такой код для сериализации объекта в json Jackson-ом:
public String renderToJson(Object dto) { try { return objectMapper.writeValueAsString(dto); } catch (IOException e) { throw new AssertionError(&amp;#34;Unexpected IOException converting object to json&amp;#34;); } } И мне это глаз резало - я генерирую строку в памяти, какой нафик IO??? Но задуматься времени не было.
А тут за чтением The modern way to perform error handling из глубин подсознания внезапно всплыл ответ:) И знаете что я вам скажу?</description></item><item><title>Разработка эргономичного кода</title><link>http://example.org/book/developing-ergonomic-code/</link><pubDate>Tue, 23 Feb 2021 13:25:37 +0700</pubDate><guid>http://example.org/book/developing-ergonomic-code/</guid><description>Table of ContentsТехническая главаРабота не завершенаTo doВведениеМотивацияЧто такое эргономичный код?Это всё из-за эффектов (todo: или таки состояния)Как появляются скрытые связи?Базовые идеиLayered architectureHexagonal (Ports&amp;amp;Adapters) architecture, Clean architecture, Onion architectureData, Context, Interaction ArchitectureDomain Driven DesingSimple Made EasyFunctional core, imperative shell (FCIS)Railway oriented programmingПроектированиеПринципы проектированияПарадигмы программирования (todo: переименовать и унести куда-то)Процедурное программирование (todo: коммент)Объектно-ориентированное программированиеФункциональное программированиеМультипарадигменное программированиеМодель системы? (Stub)Принципы проектирования системыМодель приложенияМодель Юз КейсаПлатформаПортыАдаптерыЛогикаЮз кейсыДекомпозиция приложенияРазбиение по видам классовДругие идеи к разбиению классовМой подход к разбиению классовКодированиеКонструкторы должно создавать валидные объектыУ класса может быть не более 5 зависимостейНаследование (todo)Открытые иерархииЗакрытые иерархииИзбегайте интерфейсов с единственной реализацией (todo)Иммутабельность по дефолту (todo:)Domain Specific Languages (todo)Типизированные ИДы (todo:)CQRS (todo:)Обработка ошибок (todo:)Find Usages колонок БД (#todo: #)Тестирование (todo)Моки (todo)TDD?</description></item><item><title>Услуги</title><link>http://example.org/services/</link><pubDate>Tue, 23 Feb 2021 13:25:37 +0700</pubDate><guid>http://example.org/services/</guid><description>Table of ContentsРазработка ПОАудит ПООбучениеTable of ContentsРазработка ПОАудит ПООбучение Я специализируюсь на разработке информационных систем на платформе Java. Но благодаря широкому кругозору и почти двадцати годам опыта, я успешно решаю задачи в различных областях - от системы защиты интеллектуальной собственности, до драйвера для кастомной камеры.
Мой Эргономичный подход к разработке, помогает мне создавать системы существенно более качественные, чем в среднем по рынку. Это подтверждают мои клиенты, который всегда обращаются к моим услугам повторно.</description></item></channel></rss>