<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Алексей Жидков</title><link>https://azhidkov.pro/</link><description>Recent content on Алексей Жидков</description><generator>Hugo -- gohugo.io</generator><language>ru-ru</language><lastBuildDate>Tue, 23 Feb 2021 13:25:37 +0700</lastBuildDate><atom:link href="https://azhidkov.pro/index.xml" rel="self" type="application/rss+xml"/><item><title>Обо мне</title><link>https://azhidkov.pro/about/</link><pubDate>Sat, 13 Mar 2021 13:25:37 +0700</pubDate><guid>https://azhidkov.pro/about/</guid><description>Специализируюсь на разработке информационных систем (ака серверов, бэков, АПИ) на платформе Java. Но девятнадцать лет опыта и широкий кругозор, позволяют мне успешно реализовывать и Десктопные приложения на Python и низкоуровневые системы захвата видео на C и мобильные приложения на Kotlin Multiplatform Mobile. Успешность проектов я определяю по тому, что из семи заказчиков, пять обращались к моим услугам более одного раза. Из двух оставшихся один прекратил деятельность, а второй обращался для проверки бизнес-гипотезы в сфере отличной от его основной области деятельности.</description></item><item><title>Портфолио</title><link>https://azhidkov.pro/portfolio/</link><pubDate>Sat, 13 Mar 2021 13:25:37 +0700</pubDate><guid>https://azhidkov.pro/portfolio/</guid><description>Жидков Алексей ПавловичАрхитектор, техлид https://azhidkov.pro https://github.com/d-r-q
Специализируюсь на разработке информационных систем ([1],[2],[3]) на платформе Java. Но девятнадцать лет опыта, любовь к профессии и свободное чтение на английском позволяют мне успешно делать и десктопные приложения на Python и низкоуровневые системы захвата видео на C и мобильные приложения на Kotlin Multiplatform Mobile.
Занимаюсь коммерческим программированием с 2005 года, с 2017 года работаю независимым консультантом.
Помимо разработки ПО, преподаю и веду дипломников в ВКИ НГУ и НГУ с 2007 года.</description></item><item><title>Неэргономичный Jackson</title><link>https://azhidkov.pro/posts/210212-jackson-write-object-as-string/</link><pubDate>Tue, 23 Feb 2021 13:25:37 +0700</pubDate><guid>https://azhidkov.pro/posts/210212-jackson-write-object-as-string/</guid><description>В последнее вермя несколько раз писал примерно такой код для сериализации объекта в json Jackson-ом:
public String renderToJson(Object dto) { try { return objectMapper.writeValueAsString(dto); } catch (IOException e) { throw new AssertionError(&amp;#34;Unexpected IOException converting object to json&amp;#34;); } } И мне это глаз резало - я генерирую строку в памяти, какой нафик IO??? Но задуматься времени не было.
А тут за чтением The modern way to perform error handling из глубин подсознания внезапно всплыл ответ:) И знаете что я вам скажу?</description></item><item><title>Разработка эргономичного кода</title><link>https://azhidkov.pro/book/ergo/</link><pubDate>Tue, 23 Feb 2021 13:25:37 +0700</pubDate><guid>https://azhidkov.pro/book/ergo/</guid><description>Table of ContentsТехническая главаРабота не завершенаTo doВведениеМотивацияЧто такое эргономичный код?Это всё из-за эффектов (todo: или таки состояния)Как появляются скрытые связи?Базовые идеиLayered architectureHexagonal (Ports&amp;amp;Adapters) architecture, Clean architecture, Onion architectureData, Context, Interaction ArchitectureDomain Driven DesingSimple Made EasyFunctional core, imperative shell (FCIS)Railway oriented programmingПроектированиеПринципы проектированияПарадигмы программирования (todo: переименовать и унести куда-то)Процедурное программирование (todo: коммент)Объектно-ориентированное программированиеФункциональное программированиеМультипарадигменное программированиеМодель системы? (Stub)Принципы проектирования системыМодель приложенияМодель Юз КейсаПлатформаПортыАдаптерыЛогикаЮз кейсыДекомпозиция приложенияРазбиение по видам классовДругие идеи к разбиению классовМой подход к разбиению классовКодированиеКонструкторы должно создавать валидные объектыУ класса может быть не более 5 зависимостейНаследование (todo)Открытые иерархииЗакрытые иерархииИзбегайте интерфейсов с единственной реализацией (todo)Иммутабельность по дефолту (todo:)Domain Specific Languages (todo)Типизированные ИДы (todo:)CQRS (todo:)Обработка ошибок (todo:)Find Usages колонок БД (#todo: #)Тестирование (todo)Моки (todo)TDD?</description></item><item><title>Чистые и эффективные функции: Эффекты</title><link>https://azhidkov.pro/posts/210119-effects/</link><pubDate>Sat, 09 Jan 2021 09:19:22 +0700</pubDate><guid>https://azhidkov.pro/posts/210119-effects/</guid><description>Начало темы здесь и здесь.
Сегодня расскажу о том, что я понимаю под эффектами и обработкой сигналов.
Что я понимаю под эффектами и сигналами Обработка сигнала - акт чтения глобальной изменяемой памяти.
Отправка сигнала - акт записи глобальной изменяемой памяти.
Глобальная изменяемая память - область памяти, на которую в момент чтения/записи замаплено изменяемое поле объекта или структуры, достижимого из GC root.
Эффект - операция отправки или обработки сигнала. Является подмножеством понятия побочный эффект, часто встречаемого в литературе.</description></item></channel></rss>